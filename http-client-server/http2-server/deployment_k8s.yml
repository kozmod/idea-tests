#Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-http2-server-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-http2-server
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true" #istio - inject proxy
      labels:
        app: go-http2-server
    spec:
      containers:
        - image: go-http2-server:v1.0.3
          name: go-http2-server
          ports:
            - containerPort: 8080
#        - name: istio-proxy
#          image: 'istio/proxyv2:1.6-custom'
#          args:
#            - proxy
#            - sidecar
#            - '--domain'
#            - $(POD_NAMESPACE).svc.cluster.local
#            - '--serviceCluster'
#            - go-http2-server.$(POD_NAMESPACE)
#            - '--proxyLogLevel=warning'
#            - '--proxyComponentLogLevel=misc:error'
#            - '--trust-domain=cluster.local'
#            - '--concurrency'
#            - '2'

# service
apiVersion: v1
kind: Service
metadata:
  name: http2-server-service-lb
spec:
  type: LoadBalancer
  ports:
    - port: 9091
      protocol: TCP
      targetPort: 8080
  selector:
    app: go-http2-server

#Pod
apiVersion: v1
kind: Pod
metadata:
  name: http2-server
  labels:
    app: go-http2-server
spec:
  containers:
    - image: go-http2-server:v1.0.0
      name: go-http2-server
      ports:
        - containerPort: 8080