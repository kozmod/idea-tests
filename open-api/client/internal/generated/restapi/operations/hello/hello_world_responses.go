// Code generated by go-swagger; DO NOT EDIT.

package hello

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kozmod/idea-tests/open-api/client/internal/generated/models"
)

// HelloWorldOKCode is the HTTP code returned for type HelloWorldOK
const HelloWorldOKCode int = 200

/*HelloWorldOK successful response

swagger:response helloWorldOK
*/
type HelloWorldOK struct {

	/*
	  In: Body
	*/
	Payload *models.HelloWorld `json:"body,omitempty"`
}

// NewHelloWorldOK creates HelloWorldOK with default headers values
func NewHelloWorldOK() *HelloWorldOK {

	return &HelloWorldOK{}
}

// WithPayload adds the payload to the hello world o k response
func (o *HelloWorldOK) WithPayload(payload *models.HelloWorld) *HelloWorldOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hello world o k response
func (o *HelloWorldOK) SetPayload(payload *models.HelloWorld) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HelloWorldOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HelloWorldBadRequestCode is the HTTP code returned for type HelloWorldBadRequest
const HelloWorldBadRequestCode int = 400

/*HelloWorldBadRequest Bad request

swagger:response helloWorldBadRequest
*/
type HelloWorldBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHelloWorldBadRequest creates HelloWorldBadRequest with default headers values
func NewHelloWorldBadRequest() *HelloWorldBadRequest {

	return &HelloWorldBadRequest{}
}

// WithPayload adds the payload to the hello world bad request response
func (o *HelloWorldBadRequest) WithPayload(payload *models.Error) *HelloWorldBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hello world bad request response
func (o *HelloWorldBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HelloWorldBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HelloWorldInternalServerErrorCode is the HTTP code returned for type HelloWorldInternalServerError
const HelloWorldInternalServerErrorCode int = 500

/*HelloWorldInternalServerError Internal server error

swagger:response helloWorldInternalServerError
*/
type HelloWorldInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHelloWorldInternalServerError creates HelloWorldInternalServerError with default headers values
func NewHelloWorldInternalServerError() *HelloWorldInternalServerError {

	return &HelloWorldInternalServerError{}
}

// WithPayload adds the payload to the hello world internal server error response
func (o *HelloWorldInternalServerError) WithPayload(payload *models.Error) *HelloWorldInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hello world internal server error response
func (o *HelloWorldInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HelloWorldInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
